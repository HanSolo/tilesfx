/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2016-2021 Gerrit Grunwald.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// TilesFX main build file
plugins {
    id 'idea'
    id 'java-library'
    id 'org.kordamp.gradle.java-project'
    id 'org.openjfx.javafxplugin'
    id 'biz.aQute.bnd.builder'
}


if (!project.hasProperty('bintrayUsername'))  ext.bintrayUsername  = '**undefined**'
if (!project.hasProperty('bintrayApiKey'))    ext.bintrayApiKey    = '**undefined**'
if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name          = 'TilesFX'
        description   = 'TilesFX is a JavaFX library containing tiles for dashboards'
        vendor        = 'Hansolo'
        inceptionYear = '2016'
        tags          = ['javafx', 'tiles', 'dashboard']

        links {
            website      = 'https://github.com/HanSolo/tilesfx/wiki'
            issueTracker = 'https://github.com/HanSolo/tilesfx/issues'
            scm          = 'https://github.com/HanSolo/tilesfx.git'
        }

        people {
            person {
                id    = 'HanSolo'
                name  = 'Gerrit Grunwald'
                url   = 'https://harmoniccode.blogspot.com/'
                roles = ['developer']
            }
        }

        credentials {
            sonatype {
                username = project.sonatypeUsername
                password = project.sonatypePassword
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url  = "${project.rootProject.buildDir}/repos/local/release"
            }
            repository {
                name = 'localSnapshot'
                url  = "${project.rootProject.buildDir}/repos/local/snapshot"
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    bintray {
        enabled      = true
        userOrg      = 'hansolo'
        repo         = 'tilesfx'
        name         = rootProject.name
        publish      = config.release
        credentials {
            username = project.bintrayUsername
            password = project.bintrayApiKey
        }
    }

    publishing {
        signing             = false
        releasesRepository  = 'localRelease'
        snapshotsRepository = 'localSnapshot'
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
}

normalization {
    runtimeClasspath {
        ignore('/META-INF/MANIFEST.MF')
    }
}

repositories {
    mavenCentral()
}

javafx {
    version = javafxVersion
    modules = [ 'javafx.base', 'javafx.graphics', 'javafx.controls', 'javafx.web' ]
}

jar {
    manifest {
        attributes(
                'Bundle-Name': project.name,
                'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://spdx.org/licenses/Apache-2.0.html',
                'Bundle-Description': config.info.description,
                'Bundle-SymbolicName': 'eu.hansolo.tilesfx',
                'Export-Package': 'eu.hansolo.tilesfx, eu.hansolo.tilesfx.chart, eu.hansolo.tilesfx.colors, eu.hansolo.tilesfx.events, eu.hansolo.tilesfx.fonts, eu.hansolo.tilesfx.icons, eu.hansolo.tilesfx.skins,eu.hansolo.tilesfx.tools'
        )
    }
}

// start the demo from gradle
task Demo(type: JavaExec) {
    main = "eu.hansolo.tilesfx.DemoLauncher"
    classpath = sourceSets.main.runtimeClasspath
}

// Only used for internal test
task Test(type: JavaExec) {
    main = "eu.hansolo.tilesfx.TestLauncher"
    classpath = sourceSets.main.runtimeClasspath
}

publishing {
    publications {
        main(MavenPublication) {
            pom.withXml {
                asNode().dependencies.'*'.findAll {
                    it.groupId.text() == 'org.openjfx'
                }.each {
                    it.remove(it.classifier)
                }
            }
        }
    }
}

// Fix problems with loading resources
sourceSets {
    main {
        output.setResourcesDir(java.outputDir)
    }
}